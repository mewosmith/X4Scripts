<?xml version="1.0" encoding="utf-8"?>

<aiscript name="JP_CollectDroppedCargo" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="1">

  <order id="JP_CollectDroppedCargo" name="JP CollectDroppedCargo" description="Collects dropped cargo." category="navigation" infinite="true">
    <params>
      <param name="SECTOR" type="object" default="this.sector" text="{20001, 201}">
        <input_param name="class" value="[class.sector]"/>
      </param>
      <param name="HOME_STATION" type="object" default="this.ship" text="Home Station/Ship">
        <input_param name="class" value="[class.station, class.ship]"/>
      </param>
      <param name="EMPTYING_CARGO_AT_HOME_STATION" type="bool" default="true" text="Empty cargo at home station?"/>
      <param name="COLLECT_CARGO" type="bool" default="true" text="Collect Cargo items?"/>
      <param name="COLLECT_INVENTORY" type="bool" default="false" text="Collect Inventory items?"/>
      <param name="INSTANT" type="bool" default="false" text="Instant?"/>
      <param name="INFINITE" type="bool" default="true" text="Infinite search?"/>
      <param name="DEBUG" text="Debug" type="bool" default="true" advanced="true"/>
    </params>
    <skill min="0"/>
    <requires>
      <match shiptype="shiptype.lasertower" negate="true"/>
    </requires>
  </order>

  <interrupts>
    <handler ref="SectorChangeHandler"/>
    <handler ref="TargetInvalidHandler"/>
    <!-- AttackHandler can't make it work to enable/disable it... -->
    <!-- so a second version of the mod without AttackHandler should do it -->
    <handler ref="AttackHandler"/>
    <handler ref="MissileLockHandler" />
    <handler ref="ScannedHandler"/>
    <handler ref="InspectedHandler"/>
    <handler ref="FoundAbandonedHandler"/>
    <handler ref="FoundLockboxHandler"/>
    <handler ref="ResupplyHandler"/>
    <handler ref="JobRemoveRequestHandler" />
  </interrupts>

  <init>
  </init>

  <attention min="unknown">
    <actions>

      <wait exact="1ms"/>
      <label name="START"/>
      <set_value name="$Running" exact="true"/>
      <set_value name="$Ship" exact="this.ship"/>

      <!-- If our sector isn't the target sector... fly to the target sector -->
      <do_if value="$Ship.sector != $SECTOR">
        <run_script name="'move.generic'">
          <param name="destination" value="$SECTOR" />
          <param name="endintargetzone" value="true"/>
        </run_script>
      </do_if>

      <label name="$RESUME"/>

      <create_list name="$DroppedCargo"/>
      <create_list name="$DroppedCargoSorted"/>

      <find_object name="$DroppedCargo" space="$SECTOR" multiple="true">
        <match class="class.collectablewares"/>
      </find_object>

      <!-- Check here for CanCarryWare -->
      <create_list name="$DroppedCargoToRemove"/>
      <do_all exact="$DroppedCargo.count" counter="$_it">
        <run_script name="'JP_CanCarryWare'">
          <param name="SHIP" value="$Ship"/>
          <param name="COLLECT_CARGO" value="$COLLECT_CARGO"/>
          <param name="COLLECT_INVENTORY" value="$COLLECT_INVENTORY"/>
          <param name="CONTAINER" value="$DroppedCargo.{$_it}"/>
          <save_retval name="CAN_CARRY" variable="$CanCarry"/>
        </run_script>
        <do_if value="not $CanCarry">
          <append_to_list name="$DroppedCargoToRemove" exact="$DroppedCargo.{$_it}"/>
        </do_if>
        <remove_value name="$CanCarry"/>
      </do_all>
      <remove_from_list name="$DroppedCargo" list="$DroppedCargoToRemove"/>
      <remove_value name="$DroppedCargoToRemove"/>

      <!-- Do we have cargo to collect? -->
      <do_if value="$DroppedCargo.count gt 0">

        <!-- Sort all objects by distance to the ship -->
        <do_while value="$DroppedCargo.count gt 0">
          <set_value name="$index" exact="0"/>
          <set_value name="$biggestDistance" exact="0"/>
          <do_all exact="$DroppedCargo.count" counter="$_it">
            <do_if value="$Ship.distanceto.{$DroppedCargo.{$_it}} gt $biggestDistance">
              <set_value name="$biggestDistance" exact="$Ship.distanceto.{$DroppedCargo.{$_it}}"/>
              <set_value name="$index" exact="$_it"/>
            </do_if>
          </do_all>
          <append_to_list name="$DroppedCargoSorted" exact="$DroppedCargo.{$index}"/>
          <remove_from_list name="$DroppedCargo" list="$DroppedCargoSorted"/>
          <remove_value name="$biggestDistance"/>
          <remove_value name="$index"/>
        </do_while>
        <remove_value name="$DroppedCargo"/>

        <!-- Little Debug output to see what we have found -->
        <do_if value="$DEBUG">
          <do_all exact="$DroppedCargoSorted.count" counter="$_it" reverse="true">
            <debug_text text="'Distance from %5 to collectable ~%1  ~~  %2 %3 [%4]'.[$Ship.distanceto.{$DroppedCargoSorted.{$_it}}, $DroppedCargoSorted.{$_it}.class, $DroppedCargoSorted.{$_it}.wares.list, $DroppedCargoSorted.{$_it}.idcode, $Ship.knownname]"/>
          </do_all>
        </do_if>

        <!-- Collect the objects -->
        <do_if value="$INSTANT">
          <do_all exact="$DroppedCargoSorted.count" counter="$_it" reverse="true">
            <do_if value="$DroppedCargoSorted.{$_it}.exists and not $DroppedCargoSorted.{$_it}.iswreck">
              <do_if value="$DEBUG">
                <debug_text text="'~~~ Collecting %1 ~~~'.[$DroppedCargoSorted.{$_it}.wares.list]"/>
              </do_if>
              <collect_drop drop="$DroppedCargoSorted.{$_it}" object="$Ship"/>
            </do_if>
          </do_all>
        </do_if>
        <do_else>
          <do_if value="$INFINITE">
            <do_if value="$DroppedCargoSorted.last.exists and not $DroppedCargoSorted.last.iswreck">
              <do_if value="$DEBUG">
                <debug_text text="'~~~ Collecting %1 ~~~'.[$DroppedCargoSorted.last.wares.list]"/>
              </do_if>
              <run_script name="'move.generic'">
                <param name="destination" value="$DroppedCargoSorted.last"/>
              </run_script>
              <collect_drop drop="$DroppedCargoSorted.last" object="$Ship"/>
            </do_if>
          </do_if>
          <do_else>
            <do_all exact="$DroppedCargoSorted.count" counter="$_it" reverse="true">
              <do_if value="$DroppedCargoSorted.{$_it}.exists and not $DroppedCargoSorted.{$_it}.iswreck">
                <do_if value="$DEBUG">
                  <debug_text text="'~~~ Collecting %1 ~~~'.[$DroppedCargoSorted.{$_it}.wares.list]"/>
                </do_if>
                <run_script name="'move.generic'">
                  <param name="destination" value="$DroppedCargoSorted.{$_it}"/>
                </run_script>
                <collect_drop drop="$DroppedCargoSorted.{$_it}" object="$Ship"/>
              </do_if>
            </do_all>
          </do_else>
        </do_else>

      </do_if>
      <do_else>
        <do_if value="$DEBUG">
          <debug_text text="'Nothing found to collect or Cargo bay is full.'"/>
        </do_if>
      </do_else>

      <do_if value="$EMPTYING_CARGO_AT_HOME_STATION and $HOME_STATION.isplayerowned">
        <do_if value="$Ship.cargo.free.container lt ($Ship.cargo.capacity.container * 0.1)">
          <run_script name="'JP_EmptyCargo'">
            <param name="SHIP" value="$Ship"/>
            <param name="HOME" value="$HOME_STATION"/>
            <param name="DEBUG" value="$DEBUG"/>
          </run_script>
        </do_if>
      </do_if>

      <remove_value name="$DroppedCargoSorted"/>
      <do_if value="not $INFINITE">
        <set_value name="$Running" exact="false"/>
      </do_if>

      <do_if value="$Running">
        <wait min="2s" max="8s"/>
        <resume label="$RESUME"/>
      </do_if>

      <label name="$CLEANUP"/>
      <remove_value name="$Ship"/>
      <remove_value name="$Running"/>

      <label name="FINISH"/>
      <set_order_syncpoint_reached order="this.ship.order"/>
      <cancel_order order="this.ship.order" />
      <wait exact="1ms"/>

    </actions>
  </attention>

</aiscript>